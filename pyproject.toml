[project]
authors = [
  {name = "Harlan", email = "Harlan.Heilman@wsu.edu"},
]
classifiers = [
  # Added license classifier
  "License :: OSI Approved :: MIT License", # Simplified implementation classifiers (PyPy incompatible with Rust extensions)
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Rust",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Physics", # Added maturity classifier
  "Development Status :: 4 - Beta",
]
# Added URLs for documentation and source
urls = {Documentation = "https://wsu-carbon-lab.github.io/pyref/", Source = "https://github.com/WSU-Carbon-Lab/pyref"}
# Added maintainer information (optional but recommended)
description = "Blazingly fast X-ray reflectivity data analysis package"
keywords = ["X-ray", "reflectivity", "data", "analysis"]
license = {file = "LICENSE"}
maintainers = [
  {name = "Harlan", email = "Harlan.Heilman@wsu.edu"},
]
name = "pyref"
readme = "README.md"
requires-python = ">=3.9"
version = "0.4.2"
# Added lower bound for Python version
dependencies = [
  "periodictable",
  "numpy>=1.21.0",
  "numba>=0.57.0",
  "pandas>=1.3.0",
  "polars>=0.19.0",
  "matplotlib>=3.5.0",
  "scipy>=1.7.0",
  "scikit-learn>=1.0.0",
  "scikit-image>=0.24.0",
  "ipywidgets>=8.1.3",
  "refnx>=0.1.47",
  "fastparquet>=2024.5.0",
  "pyarrow>=17.0.0",
  "ipympl>=0.9.4",
  "hvplot>=0.11.2",
]

[project.optional-dependencies]
dev = [
  "ruff>=0.9.4",
  "pytest>=7.0.0",
  "hypothesis>=6.0.0",
  "mypy>=1.0.0",
]
docs = [
  "sphinx>=7.0.0",
  "sphinx-rtd-theme>=1.0.0",
]
jupyter = ["jupyter", "notebook"] # Split out non-essential dependencies

[tool.maturin]
# Added ABI3 compatibility settings
bindings = "pyo3"
features = ["pyo3/extension-module", "pyo3/generate-import-lib"]
minimum-python-version = "3.9"
# Generate universal2 wheels for macOS
universal2 = true
# Changed to generate wheels instead of sdist
format = "wheel"
module-name = "pyref"
profile = "release"
python-source = "python/"
sdist-generate = "cargo"

[tool.ruff]
exclude = [
  ".github",
  ".git",
  ".vscode",
  "docs",
  "src",
]
fix = true
line-length = 88

[tool.ruff.lint]
ignore = ["D200"]
select = [
  "E", # pycodestyle
  "W", # pycodestyle
  "F", # Pyflakes
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "D", # flake8-docstrings
  "I", # isort
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "TID", # flake8-tidy-imports
  "UP", # pyupgrade
  "PT", # flake8-pytest-style
  "RUF", # Ruff-specific rules
  "PTH", # flake8-use-pathlib
  "FA", # flake8-future-annotations
  "PIE", # flake8-pie
  "TD", # flake8-todos
  "TRY", # tryceratops
  "EM", # flake8-errmsg
  "FBT001", # flake8-boolean-trap
]
[tool.ruff.lint.pycodestyle]
max-doc-length = 88

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.format]
docstring-code-format = true

[tool.commitizen]
major_version_zero = true
name = "cz_conventional_commits"
tag_format = "v$version"
update_changelog_on_bump = true
version_provider = "pep621"
version_scheme = "pep440"

[build-system]
build-backend = "maturin"
requires = ["maturin>=1.0,<2.0"]

[dependency-groups]
dev = [
  "ruff>=0.9.4",
]
