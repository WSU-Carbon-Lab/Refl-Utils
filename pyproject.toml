[build-system]
build-backend = "maturin"
requires = ["maturin>=1.7,<2.0"]

[project]
authors = [{name = "Harlan Heilman", email = "Harlan.Heilman@wsu.edu"}]
dependencies = [
  "numpy",
  "pandas",
  "polars",
  "matplotlib",
  "jupyter",
  "plotly",
  "typer",
  "click",
  "scipy",
  "scikit-learn",
  "astropy",
  "pip>=24.2",
  "opencv-python>=4.10.0.84",
  "ipywidgets>=8.1.3",
  "refnx>=0.1.47",
  "art>=6.2",
  "fastparquet>=2024.5.0",
  "pyarrow>=17.0.0",
  "scikit-image>=0.24.0",
  "torch>=2.4.0",
  "torchvision>=0.19.0",
  "opencv-python-headless>=4.10.0.84",
  "maturin>=1.7.1",
  "ipympl>=0.9.4",
]
description = "Blazingly fast X-ray reflectivity data analysis package"
license = {file = "LICENSE"}
name = "pyref"
readme = "README.md"
requires-python = ">=3.12"

classifiers = [
  "Programming Language :: Rust",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering :: Physics",
]
keywords = ["X-ray", "reflectivity", "data", "analysis"]

[tool.maturin]
features = ["pyo3/extension-module"]
python-source = "python/"

[tool.ruff]
exclude = [
  ".github",
  ".git",
  ".vscode",
  "docs",
  "src",
]
extend-include = [
  "*.ipynb",
]
fix = true
line-length = 88

[tool.ruff.lint]
select = [
  "E", # pycodestyle
  "W", # pycodestyle
  "F", # Pyflakes
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "D", # flake8-docstrings
  "D213", # Augment NumPy docstring convention: Multi-line docstring summary should start at the second line
  "D417", # Augment NumPy docstring convention: Missing argument descriptions
  "I", # isort
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "TID", # flake8-tidy-imports
  "UP", # pyupgrade
  "PT", # flake8-pytest-style
  "RUF", # Ruff-specific rules
  "PTH", # flake8-use-pathlib
  "FA", # flake8-future-annotations
  "PIE", # flake8-pie
  "TD", # flake8-todos
  "TRY", # tryceratops
  "EM", # flake8-errmsg
  "FBT001", # flake8-boolean-trap
]

[tool.ruff.lint.pycodestyle]
max-doc-length = 88

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
strict = true

[tool.ruff.format]
docstring-code-format = true
