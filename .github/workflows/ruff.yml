name: Build and Publish
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Ruff Format
        uses: chartboost/ruff-action@v1
        with:
          args: "format ./pyproject.toml"

  build-wheels:
    needs: format
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        include:
          - os: ubuntu-latest
            platform: manylinux_x86_64
          - os: ubuntu-latest
            platform: musllinux_x86_64
          - os: macos-latest
            platform: macosx_x86_64
          - os: macos-latest
            platform: macosx_arm64
          - os: windows-latest
            platform: win_amd64

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform }}
          args: --release --strip --compatibility manylinux_2_28_x86_64
          sccache: true
          manylinux: auto

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: target/wheels/*.whl
          retention-days: 5

  publish:
    needs: build-wheels
    runs-on: ubuntu-latest
    if: startsWith(github.event.head_commit.message, 'bump:')

    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*
          merge-multiple: true

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          skip-existing: true
